[versions]
#plugins
calendar = "1.2.1"
coreSplashscreen = "1.0.1"
datastorePreferences = "1.0.0"
jwtdecode = "2.0.2"
kotlin = "1.9.10"
gradle = "8.2.1"

#SDK

compileSdk = "34"
lazytable = "1.6.0"
material3HtmlText = "2.0.0-beta01"
minSdk = "26"
mvikotlin = "3.3.0"
orgJetbrainsComposeGradlePlugin = "1.5.11"
targetSdk = "34"
namespace = "com.markettwits.sportsouce"
jvm = "8"
jvm-dot = "1.8"

#DI
koin = "3.4.0"

# Compose
compose = "1.5.3"
compose-ui = "1.5.3"
compose-bom = "2023.03.00"
compose-activity = "1.8.1"
compose-lifecycle = "2.6.1"
compose-material3 = "1.2.0-alpha11"
compose-navigation = "2.7.1"
compose-preview = "1.5.1"
compose-coil = "2.5.0"
accompanist = "0.32.0"
onebone-toolbar = "2.3.5"
realm-gradle-plugin = "10.2.0"
zoomable = "1.5.1"
pullRefresh = "1.0.1"
# Android
android-lifecycle-ktx = "2.6.1"
exifinterface = "1.3.6"

#Ui/Unit test
junit = "4.12"
junit-ext-ktx = "1.1.5"
testing = "6.9.6"
androidx-test-ext-junit = "1.1.5"
espresso-core = "3.5.1"
leakcanary = "2.12"

#Network
retrofit = "2.9.0"
okkhttp = "4.11.0"
core-ktx = "1.9.0"
ktor = "2.2.4"
#UI
appcompat = "1.6.1"
material = "1.9.0"
nabla-gallery = "1.4.5"

#Database
realm = "1.11.0"
#Codegen
ksp = "1.9.10-1.0.13"

#Serialization
kotlinx-serialization = "1.6.2"
jakewharton = "0.8.0"

#Decompose
decompose = "3.0.0-alpha01"
org-jetbrains-kotlin-jvm = "1.9.21"

kotlinx-datetime = "0.4.0"

[libraries]
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
calendar = { module = "com.maxkeppeler.sheets-compose-dialogs:calendar", version.ref = "calendar" }
compose-ui = { group = "androidx.compose", name = "ui:ui", version.ref = "compose" }
compose-graphics = { group = "androidx.compose.ui", name = "ui-graphics", version.ref = "compose-ui" }
compose-runtime = { group = "androidx.compose.runtime", name = "runtime", version.ref = "compose-ui" }
compose-lifecycle-viewmodel = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "compose-lifecycle" }
compose-activity = { group = "androidx.activity", name = "activity-compose", version.ref = "compose-activity" }
compose-material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "compose-material3" }
compose-material3-window-size = { group = "androidx.compose.material3", name = "material3-window-size-class", version.ref = "compose-material3" }
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose-bom" }
compose-material-icons = { group = "androidx.compose.material", name = "material-icons-extended", version.ref = "compose-ui" }
compose-accomponist = { group = "com.google.accompanist", name = "accompanist-systemuicontroller", version.ref = "accompanist" }
compose-navigation = { group = "androidx.navigation", name = "navigation-compose", version.ref = "compose-navigation" }
compose-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview", version.ref = "compose-preview" }
compose-preview = { group = "androidx.compose.ui", name = "ui-tooling", version.ref = "compose-preview" }
compose-coil = {group = "io.coil-kt", name = "coil-compose", version.ref = "compose-coil"}
compose-icons = {group = "androidx.compose.material", name = "material-icons-extended", version.ref = "compose-ui"}
jwtdecode = { module = "com.auth0.android:jwtdecode", version.ref = "jwtdecode" }
lazytable = { module = "io.github.oleksandrbalan:lazytable", version.ref = "lazytable" }
material3-html-text = { module = "de.charlex.compose.material3:material3-html-text", version.ref = "material3HtmlText" }
pullrefresh = { module = "eu.bambooapps:compose-material3-pullrefresh", version.ref = "pullRefresh" }
#MVI KOTLIN
mvikotlin = { module = "com.arkivanov.mvikotlin:mvikotlin", version.ref = "mvikotlin" }
mvikotlin-extensions-coroutines = { module = "com.arkivanov.mvikotlin:mvikotlin-extensions-coroutines", version.ref = "mvikotlin" }
mvikotlin-logging = { module = "com.arkivanov.mvikotlin:mvikotlin-logging", version.ref = "mvikotlin" }
mvikotlin-main = { module = "com.arkivanov.mvikotlin:mvikotlin-main", version.ref = "mvikotlin" }
onebone-toolbar = {group = "me.onebone", name = "toolbar-compose", version.ref = "onebone-toolbar"}
android-lifecycle-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "android-lifecycle-ktx" }
org-jetbrains-compose-gradle-plugin = { module = "org.jetbrains.compose:org.jetbrains.compose.gradle.plugin", version.ref = "orgJetbrainsComposeGradlePlugin" }
realm-gradle-plugin = { module = "io.realm:realm-gradle-plugin", version.ref = "realm-gradle-plugin" }
zoomable = { group = "net.engawapg.lib", name = "zoomable", version.ref = "zoomable" }
#androidx-exifinterface = { group = "androidx.exifinterface", name = "exifinterface", version.ref = "exifinterface" }

#Test
junit = {group = "junit", name = "junit",version.ref = "junit"}
junit-ext-ktx = { group = "androidx.test.ext", name = "junit-ktx", version.ref = "junit-ext-ktx" }
testing = { group = "org.testng", name = "testing", version.ref = "testing" }
leakcanary = {group = "com.squareup.leakcanary", name = "leakcanary-android", version.ref = "leakcanary"}

#Serialization
kotlinx-serialization-gradle-plugin = { group = "org.jetbrains.kotlin", name = "kotlin-serialization", version.ref = "kotlinx-serialization" }
kotlinx-serialization-core = {group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-core", version.ref = "kotlinx-serialization"}
kotlinx-serialization-json = {group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization"}
jakewharton = {group = "com.jakewharton.retrofit", name = "retrofit2-kotlinx-serialization-converter", version.ref = "jakewharton"}

#Data
retrofit = {group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit"}
retrofit-converter = {group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "retrofit"}
okkhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okkhttp"}
okkhttp-interceptor = {group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref ="okkhttp"}
core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "core-ktx" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
realm = {group =  "io.realm.kotlin", name = "library-base", version.ref = "realm"}
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-ext-junit" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso-core" }

ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-content-negotiation= { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

#Decompose
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-compose-jetbrains = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version = "v2.2.0-alpha01" }
decompose-compose-extension = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }

decompose-compose-jetpack = { module = "com.arkivanov.decompose:extensions-compose-jetpack", version.ref = "decompose" }
decompose-android = { module = "com.arkivanov.decompose:extensions-android", version.ref = "decompose"}

#DI

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = {group = "io.insert-koin", name = "koin-android", version.ref = "koin"}

#UI
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
nabla-gallery = {group = "run.nabla", name = "gallery-picker", version.ref = "nabla-gallery"}

android-gradle = {module = "com.android.tools.build:gradle", version.ref = "gradle"}
kotlin-gradle = {module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin"}

[plugins]
#kotlin-serialization =  {id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin"}
kotlin-serialization =  {id = "org.jetbrains.kotlin.plugin.serialization", version = "1.9.10"}
android-library = { id = "com.android.library", version.ref = "gradle" }
android-application = {id = "com.android.application", version.ref = "gradle"}
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize",  version.ref = "kotlin"}
realm = {id = "io.realm.kotlin", version.ref = "realm"}
ksp = {id = "com.google.devtools.ksp", version.ref = "ksp"}
org-jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "org-jetbrains-kotlin-jvm" }

#Convention Plugins
kotlin-jvm-convention = {id = "kotlin-jvm-convention", version = "unspecified"}
android-library-convention = {id = "android-library-convention", version = "unspecified"}
android-library-compose-convention = {id = "android-library-compose-convention", version = "unspecified"}

#Test Plugins
#kotlin-multiplatform-android-convention = {id = "kotlin-multiplatform-android-convention", version = "unspecified"}
#multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version = "1.9.10" }
#compose = { id = "org.jetbrains.compose", version = "1.6.0-alpha01" }


jetbrainsCompose = { id = "org.jetbrains.compose", version = "1.5.1" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version = "1.9.10" }


[bundles]
composeUiBundle = [
    "compose-graphics",
    "compose-runtime",
    "compose-lifecycle-viewmodel",
    "compose-activity",
    "compose-material3",
    "compose-material3-window-size",
    "compose-accomponist",
    "pullrefresh",
    "android-lifecycle-ktx",
    "compose-coil",
    "compose-icons"
]
composeUiTest = ["junit-ext-ktx", "testing"]
composeUiBundleDebug = [
    "compose-preview",
    "compose-tooling-preview",
]
decompose-compose = ["decompose-compose-extension", "decompose"]
mviKotlin = ["mvikotlin","mvikotlin-extensions-coroutines","mvikotlin-logging","mvikotlin-main"]

